-- MySQL Script generated by MySQL Workbench
-- Fri May  7 21:51:56 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema 4umd
-- -----------------------------------------------------
SHOW WARNINGS;

-- -----------------------------------------------------
-- Table person
-- -----------------------------------------------------
DROP TABLE IF EXISTS person ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS person (
  univ_id INT NOT NULL,
  last_name VARCHAR(45) NOT NULL,
  first_name VARCHAR(45) NOT NULL,
  affiliaton TINYINT NOT NULL DEFAULT 0,
  training_status TINYINT NOT NULL DEFAULT 0,
  training_completion_date DATETIME NOT NULL,
  PRIMARY KEY (univ_id))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX univ_id_UNIQUE ON person (univ_id ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table testing
-- -----------------------------------------------------
DROP TABLE IF EXISTS testing ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS testing (
  testing_id INT NOT NULL AUTO_INCREMENT,
  univ_id INT NOT NULL,
  test_result VARCHAR(45) BINARY NOT NULL,
  test_date DATETIME NOT NULL,
  PRIMARY KEY (testing_id),
  CONSTRAINT univ_id
    FOREIGN KEY (univ_id)
    REFERENCES person (univ_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX univ_id_UNIQUE ON testing (univ_id ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table visit_status
-- -----------------------------------------------------
DROP TABLE IF EXISTS visit_status ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS visit_status (
  univ_id INT NOT NULL,
  visited_campus VARCHAR(45) BINARY NOT NULL,
  visit_id INT NOT NULL AUTO_INCREMENT,
  visit_date DATETIME NULL,
  PRIMARY KEY (visit_id, univ_id),
  CONSTRAINT testing_id
    FOREIGN KEY (univ_id)
    REFERENCES person (univ_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX univ_id_UNIQUE ON visit_status (univ_id ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX visit_id_UNIQUE ON visit_status (visit_id ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table buildings
-- -----------------------------------------------------
DROP TABLE IF EXISTS buildings ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS buildings (
  building_id INT NOT NULL,
  building_name VARCHAR(45) NULL,
  PRIMARY KEY (building_id))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table visited_locations
-- -----------------------------------------------------
DROP TABLE IF EXISTS visited_locations ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS visited_locations (
  location_visit_id INT NOT NULL AUTO_INCREMENT,
  visit_id INT NOT NULL,
  building_id INT NOT NULL,
  PRIMARY KEY (location_visit_id, visit_id, building_id),
  CONSTRAINT visit_id
    FOREIGN KEY (visit_id)
    REFERENCES visit_status (visit_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT building_id
    FOREIGN KEY (building_id)
    REFERENCES buildings (building_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX visit_id_UNIQUE ON visited_locations (visit_id ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX building_id_UNIQUE ON visited_locations (building_id ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX building_name_UNIQUE ON visited_locations (location_visit_id ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table contact_report_people
-- -----------------------------------------------------
DROP TABLE IF EXISTS contact_report_people ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS contact_report_people (
  contact_person_id INT NOT NULL AUTO_INCREMENT,
  contact_first_name VARCHAR(45) NOT NULL,
  contact_last_name VARCHAR(45) NOT NULL,
  contact_email VARCHAR(45) NOT NULL,
  PRIMARY KEY (contact_person_id))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX contact_email_UNIQUE ON contact_report_people (contact_email ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table symptoms
-- -----------------------------------------------------
DROP TABLE IF EXISTS symptoms ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS symptoms (
  symptom_id INT NOT NULL,
  symptom_name VARCHAR(20) NOT NULL,
  PRIMARY KEY (symptom_id))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX univ_id_UNIQUE ON symptoms (symptom_name ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX symptom_id_UNIQUE ON symptoms (symptom_id ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table vaccination
-- -----------------------------------------------------
DROP TABLE IF EXISTS vaccination ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS vaccination (
  univ_id INT NOT NULL,
  vaccinated TINYINT NOT NULL,
  vaccination_type VARCHAR(45) NULL,
  dose_1_date DATETIME NULL,
  dose_2_date DATETIME NULL,
  PRIMARY KEY (univ_id),
  CONSTRAINT vaccinated
    FOREIGN KEY (univ_id)
    REFERENCES person (univ_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX univ_id_UNIQUE ON vaccination (univ_id ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table symptom_check_report
-- -----------------------------------------------------
DROP TABLE IF EXISTS symptom_check_report ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS symptom_check_report (
  report_id INT NOT NULL AUTO_INCREMENT,
  univ_id INT NOT NULL,
  symptom_check_date DATETIME NULL,
  PRIMARY KEY (report_id),
  CONSTRAINT report_id_id
    FOREIGN KEY (univ_id)
    REFERENCES person (univ_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX report_id_UNIQUE ON symptom_check_report (report_id ASC) VISIBLE;

SHOW WARNINGS;
CREATE UNIQUE INDEX univ_id_UNIQUE ON symptom_check_report (univ_id ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table reported_symptoms
-- -----------------------------------------------------
DROP TABLE IF EXISTS reported_symptoms ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS reported_symptoms (
  report_id INT NOT NULL,
  symptom_id INT NOT NULL,
  PRIMARY KEY (report_id, symptom_id))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table close_contact_reports
-- -----------------------------------------------------
DROP TABLE IF EXISTS close_contact_reports ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS close_contact_reports (
  univ_id INT NOT NULL,
  contact_person_id INT NOT NULL,
  contact_date DATETIME NULL,
  PRIMARY KEY (contact_person_id, univ_id),
  CONSTRAINT contact_person
    FOREIGN KEY (univ_id)
    REFERENCES person (univ_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT con_per_id
    FOREIGN KEY (contact_person_id)
    REFERENCES contact_report_people (contact_person_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
SET SQL_MODE = '';
DROP USER IF EXISTS srinidhinag;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
SHOW WARNINGS;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
